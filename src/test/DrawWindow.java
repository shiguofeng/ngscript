/*
 *  wssccc all rights reserved
 */
package test;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author wssccc <wssccc@qq.com>
 */
public class DrawWindow extends javax.swing.JFrame {

    BufferedImage bi;

    /**
     * Creates new form NewJFrame
     */
    public DrawWindow() {
        bi = new BufferedImage(500, 700, BufferedImage.TYPE_3BYTE_BGR);
        Graphics g = bi.getGraphics();
        g.setColor(Color.GRAY);
        g.fillRect(0, 0, bi.getWidth(), bi.getHeight());
        g.dispose();
        time = System.currentTimeMillis();
        initComponents();
        instance = this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(500, 700));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 496, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void save() {
        try {
            // TODO add your handling code here:
            ImageIO.write(bi, "bmp", new File("out.bmp"));
        } catch (Exception ex) {
            Logger.getLogger(DrawWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    static DrawWindow instance;
    int count = 0;
    long time;
    static final int REFRESH_INTERVAL = 10000;

    void drawPoint(int x, int y, int r, int g, int b) {
        if (x < bi.getWidth() && x >= 0 && y >= 0 && y < bi.getHeight()) {
            ++count;
            if (count > REFRESH_INTERVAL) {
                long new_time = System.currentTimeMillis();
                System.out.println("dps = " + (REFRESH_INTERVAL / ((new_time - time) / 1000.0)));
                time = new_time;
                System.out.println("save");
                count = 0;
                save();
                Graphics g2d = jPanel1.getGraphics();
                g2d.drawImage(bi, 0, 0, null);
                g2d.dispose();
            }
            r = (r >= 0 && r <= 255) ? r : 0;
            g = (g >= 0 && g <= 255) ? g : 0;
            b = (b >= 0 && b <= 255) ? b : 0;
            int rgb = (r << 16) | (g << 8) | b;
            bi.setRGB(x, y, rgb);
        }
    }

    public static void draw(int x, int y, int r, int g, int b) {
        if (instance != null) {
            instance.drawPoint(x, y, r, g, b);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DrawWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DrawWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DrawWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DrawWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DrawWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
